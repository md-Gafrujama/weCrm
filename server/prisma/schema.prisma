// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User { //status like block/unblock,, loggedIn time  ..
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  lastName       String
  username       String   @unique
  email          String   @unique
  hashedPassword String
  phoneNumber    String?
  role           String
  userType       String?
  photo          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  assignedWork   String?
  statusOfWork   String?
  statusOfAccount         String?    
  loggedInTime   DateTime?
}

model company {  
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String  
  lastName       String 
  email          String   @unique
  phone          String   @unique
  hashedPassword       String  
  companyName    String   @unique
  GSTNumber      String   @unique
  plan           String
  agreeToterms   Boolean 
  timeZone       String? 
  couponCode     String?  
  remainingDays   Int
  paidStatus    Boolean
  role           String
  noOfUsers      Int?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

// leads,otp
//leads schema shall contain {uid,cid,title,customerName,,mobileNumber,email,topicOfWork,ClosingDate}
//otp schema shall contain {uid, genOTp,GivenOTP,attempts,created date and time, expreyd Data and time}
model Lead {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  uid           String   
  cid           String   
  title         String
  customerName  String
  mobileNumber  String
  email         String
  topicOfWork   String
  closingDate   DateTime

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model OTP {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  uid          String   
  genOTP       String   
  givenOTP     String?  
  attempts     Int      
  createdAt    DateTime @default(now())
  expiresAt    DateTime                      
}

